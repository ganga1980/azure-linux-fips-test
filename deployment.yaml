apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-service-account
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: app-service-account-reader
rules:
  - apiGroups: [""]
    resources:
      [
        "nodes/stats",
        "nodes/metrics",
        "nodes/spec",
        "nodes/proxy"
      ]
    verbs: ["list", "get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: clusterrolebinding
subjects:
  - kind: ServiceAccount
    name: app-service-account
    namespace: default
roleRef:
  kind: ClusterRole
  name: app-service-account-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariner
  template:
    metadata:
      labels:
        app: mariner
    spec:
      serviceAccountName: app-service-account
      containers:
      - name: app-container
        image: ganga1980/fips-test:2.0.20231130 # with base & distroless version 2.0.20231130
        # image: ganga1980/fips-test:2.0.20240112 # with base & distroless version 2.0.20240112
        imagePullPolicy: Always
        command: ["tail", "-f", "/dev/null"]
        env:
        - name: NODE_IP
          valueFrom:
            fieldRef:
             fieldPath: status.hostIP
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.azure.com/fips_enabled: "true"
